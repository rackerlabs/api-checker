* api-checker TODOs
** DONE Mavenize
** DONE Move Normalizer code to a lib in WADL tools.
** DONE Schema for checker XML (XSD 1.1)
** DONE File Xerces Bugs[2/2]
   1. [X] assert error
   2. [X] multiple ID error in cli validator
** DONE WADL Normalize, Builder, opt1, checker2dot in a single PATH.
   Maybe an optional output?
** DONE CLI for translation?
** DONE Implement validator [9/9]
   1. [X] Implement dispatch handler
   2. [X] Create assert handler
   3. [X] Simple tests on validator [6/6]
      1. [X] GET a/b
      2. [X] Empty machine
      3. [X] GET on regex
      4. [X] GET on an allow all regex
      5. [X] Method regex
      6. [X] Complex URI tests
   4. [X] Unit test steps [6/6]
      1. [X] Start
      2. [X] Accept
      3. [X] MethodFail
      4. [X] URLFail
      5. [X] URI
      6. [X] Method
   5. [X] Clean up console handler...should be more readable
   6. [X] Add Fail Matchers[5/5]
      1. [X] Add URL Fail Matcher
      2. [X] Add Method Fail Matchers
      3. [X] Test URL Fail Matcher
      4. [X] Test Method Fail Matcher
      5. [X] Update validation tests to use both matchers
   7. [X] Capture attempt in error steps
   8. [X] Quickly extract correct error in multi-result case
   9. [X] Assert that validator tests above return the correct error
** DONE Checker to scala.[6/6]
   1. [X] Build support for method/uri fail match in schema
   2. [X] Populate method/uri fail match in checker conversion
   3. [X] Update dot conversion to accunt for method/uri fail match
   4. [X] Checker to scala as a handler -- possibly passing to an
      other handler
   5. [X] Add support in validator
   6. [X] Test conversion..including new error states.
** DONE Updates to XSD Schema[3/3]
   1. [X] Checker should allow only one start node.
   2. [X] Method must always have next nodes.
   3. [X] Add grammar section (type, namespace, href)
** DONE WADL Normalize, Builder, opt1 in a single path [5/5]
   1. [X] Add Builder Library
   2. [X] Support Grammar in checker format[2/2]
      1. [X] Add support for grammar in checker format
      2. [X] Generate checker format with grammars
   3. [X] Simple transation tests to confirm the lib is working [6/6]
      1. [X] Test URI and Method from various WADL configurations[13/13]
         1. [X] Emtpty WADL
         2. [X] URL/Method single resource
         3. [X] URL/Method single resource (tree)
         4. [X] URL/Method single resource (mixed)
         5. [X] Method Reference
         6. [X] Resource Type
         7. [X] Resource Type with Method Reference
         8. [X] Multiple Resource PATHs
         9. [X] Multiple Resource PATHs (tree)
         10. [X] Multiple Resource PATHs (mixed)
         11. [X] Mulitple Resource PATHs (disconnected)
         12. [X] Multiple Resource PATHs (disconnected, tree)
         13. [X] Multiple Resource PATHs (disconnected, mixed)
      2. [X] Other misc Translation tests [2/2]
         1. [X] State Labels
         2. [X] rax:invisible extension
      3. [X] Ensure that input WADLs are correct before tests are run.
      4. [X] Test Path Templates[4/4]
         1. [X] String templates[7/7]
            1. [X] At the end of the path
            2. [X] At the end of the path (tree)
            3. [X] At the end of the path (mixed)
            4. [X] In between path
            5. [X] In between path (tree)
            6. [X] In between path (mixed)
            7. [X] Different prefix
         2. [X] Test Path Templates of other types[9/9]
            1. [X] At the end of the path
            2. [X] At the end of the path (tree)
            3. [X] At the end of the path (mixed)
            4. [X] In between path
            5. [X] In between path (tree)
            6. [X] In between path (mixed)
            7. [X] Test default QName type
            8. [X] Test default QName type (tree)
            9. [X] Test default QName type (mixed)
         3. [X] Resource/Parameter mismatch[4/4]
            1. [X] Name MisMatch
            2. [X] Missing parameter
            3. [X] Bad Parameter type
            9. [X] Bad QName
         4. [X] RegEx Encoding[2/2]
            1. [X] In URL
            2. [X] In Method
      5. [X] Write tests for multi-method target
      6. [X] WADL Grammar[2/2]
         1. [X] External Grammar[6/6]
            1. [X] File Available, add to checker
            2. [X] Multiple available files
            3. [X] Relative paths
            4. [X] Missing File should fail
            5. [X] Should not fail with unknown XML
            6. [X] Should not fail with unknown unparsed-text
         2. [X] Inline Grammar
   4. [X] Add Opt as an option, by pipeing through removeDups
   5. [X] Simple optimization test to confirm functionality[9/9]
        1. [X] OPT on but no duplicates
        2. [X] OPT on but no duplicates (tree)
        3. [X] OPT on but no duplicates (mixed)
        4. [X] A single duplicate
        5. [X] A single duplicate (tree)
        6. [X] A single duplicate (mixed)
        7. [X] Multiple duplicates
        8. [X] Multiple duplicates (tree)
        9. [X] Multiple duplicates (mixed)
** DONE URLXSD types [6/6]
   1. [X] URLXSD node
   2. [X] URLXSD/URL Fail nodes
   3. [X] step handler -- external grammar
   4. [X] WADL XSD tests
   5. [X] step handler -- inline grammar
   6. [X] WADL XSD tests -- inline
** DONE API Checker Servlet Filter[4/4]
   1. [X] Default Servlet Result Handler
   2. [X] Initial Filter Project
   3. [X] Simple config and handler -- simple WADL
   4. [X] Save DOT
** DONE Propigate XSD type errors correctly
** DONE Add stage to check well formed XML [11/11]
   1. [X] Add support for WELL_XML, WELL_JSON, CONTET_FAIL in XSD
   2. [X] Add support in XSLs
   3. [X] Setup configuration to check for well formness
   4. [X] Update cli tools with new config
   5. [X] Write next connected step in less functional style to avoid
      calls
   6. [X] XML
          1. [X] Create document parse pool
          2. [X] Create WELL_XML state type using parse pool
          3. [X] Check to make sure that the XML hasn't already been parsed.
   7. [X] Create CONTENT_FAIL state
   8. [X] JSON (Setup Skeleton Only)
   9. [X] Connect states with handler
   10. [X] Tests [5/5]
           1. [X] States
           2. [X] Validator
           3. [X] Checker Tests
           4. [X] Step Builder Tests
           5. [X] WADL Validation
   11. [X] Update sample filter / webapp
** DONE Add checks for well formed JSON [3/3]
   1. [X] Add Parser Pool
   2. [X] Update JSON stage
   3. [X] Add JSON Tests
          1. [X] States
          2. [X] Checker Tests
          3. [X] Step Builder Tests
          4. [X] Validator
          5. [X] WADL Validation
** DONE Respond to Xerces JIRA
** DONE Add support for schema XML schema check [10/10]
   1. [X] Add support for XSD_CHECK in XSD
   2. [X] Add XSD check in config
   3. [X] Add support for XSD check in XSLs
   4. [X] Update CLI tools if nessesary
   5. [X] Create schema parse pool if nessesary
   6. [X] Transition other XSD checks to use pool
   7. [X] Create XSD check state
   8. [X] Add support for check state in the builder
   9. [X] Tests[7/7]
      1. [X] States
      2. [X] Checker Tests
      3. [X] Step Builder Tests
      4. [X] WADL Validator
      5. [X] Schema pool test
      6. [X] Test on parameter check / include test for WELL_FORM to
      7. [X] Test on grammar checks when no grammar is available.
   10. [X] Update sample filter / webapp
** DONE Bean attributes for config
** TODO Fix test error, where register is not working in step-test.scala
** TODO Review Skipped Tests[0/2]
   1. [ ] Saxon validation
   2. [ ] WADL Tools
** TODO Saxon report error(?) where casting is always nessesary.
** TODO Support XML schema validation, adding default parameters
** TODO Modify filter to handle different groups
** TODO Better log handling...ERROR, INFO, etc..carried out to XSL as well
** TODO WADL Change Detector...
** TODO Real tests on DOT output
** TODO Expand checker to dot conversion in builder
** TODO Bring checker to dot conversion to cli
** TODO Better XSD tests
* Tests 10 Threads 5000 count
|--------+---------+--------+----------------+-----------------+----------------------------------------------+----------------------------------------------|
| Type   | /images | /image | /images/detail | /images/details | /images/de31d986-a7be-11e1-994a-bba4de7e4604 | /images/de31d986-a7be-11e1-994a-bba4de7e460z |
|--------+---------+--------+----------------+-----------------+----------------------------------------------+----------------------------------------------|
| XERCES |  2498.1 | 2171.2 |         1024.7 |           877.1 |                                       1037.0 |                                        777.0 |
| SAXON  |  2519.3 | 2113.2 |         1898.1 |          1851.4 |                                       1997.1 |                                       1634.0 |
|--------+---------+--------+----------------+-----------------+----------------------------------------------+----------------------------------------------|

After schema pool and non-functional dispatch

|--------+---------+--------+----------------+-----------------+----------------------------------------------+----------------------------------------------|
| Type   | /images | /image | /images/detail | /images/details | /images/de31d986-a7be-11e1-994a-bba4de7e4604 | /images/de31d986-a7be-11e1-994a-bba4de7e460z |
|--------+---------+--------+----------------+-----------------+----------------------------------------------+----------------------------------------------|
| XERCES |  2504.1 | 2274.2 |         2424.8 |          1695.0 |                                       2221.3 |                                       1667.2 |
| SAXON  |  2484.3 | 2227.8 |         2329.8 |          1714.0 |                                       2209.6 |                                       1639.2 |
|--------+---------+--------+----------------+-----------------+----------------------------------------------+----------------------------------------------|


