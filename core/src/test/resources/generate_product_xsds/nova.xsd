<?xml version="1.0" encoding="UTF-8"?>
<!--
    THIS SCHEMA IS AUTOGENERATED DO NOT EDIT
    ORIGINAL FILE: file:/Users/matt.kovacs/git-forks/standard-usage-schemas/sample_product_schemas/nova.xml
    GENERATED ON: 2013-03-25T10:18:55.847-05:00
-->
<xsd:schema xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:html="http://www.w3.org/1999/xhtml"
            xmlns:xerces="http://xerces.apache.org"
            xmlns:saxon="http://saxon.sf.net/"
            xmlns="http://www.w3.org/2001/XMLSchema"
            xmlns:usage="http://docs.rackspace.com/core/usage"
            xmlns:p="http://docs.rackspace.com/event/nova"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified"
            targetNamespace="http://docs.rackspace.com/event/nova">
   <element name="product" type="p:CloudServersOpenStackType"/>
   <complexType name="CloudServersOpenStackType">
      <annotation>
         <documentation>
            <html:p>Usage message for a Next Generation (Nova) slice.</html:p>
         </documentation>
         <appinfo>
            <usage:core groupByResource="true" type="USAGE"/>
         </appinfo>
      </annotation>
      <attribute name="version" type="xsd:string" use="required" fixed="1"/>
      <attribute name="resourceType" use="required" type="p:ResourceTypes"/>
      <attribute name="serviceCode"
                 use="required"
                 type="xsd:Name"
                 fixed="CloudServersOpenStack"/>
      <attribute name="flavor" use="required" type="p:flavorType">
         <annotation>
            <documentation>
               <html:p>The flavor id of the slice.</html:p>
            </documentation>
            <appinfo>
               <usage:attributes aggregateFunction="NONE" groupBy="true" billable="true"/>
            </appinfo>
         </annotation>
      </attribute>
      <attribute name="isRedHat"
                 use="optional"
                 default="false"
                 type="xsd:boolean">
         <annotation>
            <documentation>
               <html:p>Does the slice use a RedHat license.</html:p>
            </documentation>
            <appinfo>
               <usage:attributes aggregateFunction="NONE" groupBy="true" billable="true"/>
            </appinfo>
         </annotation>
      </attribute>
      <attribute name="isMSSQL"
                 use="optional"
                 default="false"
                 type="xsd:boolean">
         <annotation>
            <documentation>
               <html:p>Does the slice use an MSSQL license.</html:p>
            </documentation>
            <appinfo>
               <usage:attributes aggregateFunction="NONE" groupBy="true" billable="true"/>
            </appinfo>
         </annotation>
      </attribute>
      <attribute name="isMSSQLWeb"
                 use="optional"
                 default="false"
                 type="xsd:boolean">
         <annotation>
            <documentation>
               <html:p>Does the slice use an MSSQL Web license.</html:p>
            </documentation>
            <appinfo>
               <usage:attributes aggregateFunction="NONE" groupBy="true" billable="true"/>
            </appinfo>
         </annotation>
      </attribute>
      <attribute name="isWindows"
                 use="optional"
                 default="false"
                 type="xsd:boolean">
         <annotation>
            <documentation>
               <html:p>Does the slice use a Windows license.</html:p>
            </documentation>
            <appinfo>
               <usage:attributes aggregateFunction="NONE" groupBy="true" billable="true"/>
            </appinfo>
         </annotation>
      </attribute>
      <attribute name="isSELinux"
                 use="optional"
                 default="false"
                 type="xsd:boolean">
         <annotation>
            <documentation>
               <html:p>Does the slice use an SELinux license.</html:p>
            </documentation>
            <appinfo>
               <usage:attributes aggregateFunction="NONE" groupBy="true" billable="true"/>
            </appinfo>
         </annotation>
      </attribute>
      <attribute name="isManaged"
                 use="optional"
                 default="false"
                 type="xsd:boolean">
         <annotation>
            <documentation>
               <html:p>Is this a managed slice.</html:p>
            </documentation>
            <appinfo>
               <usage:attributes aggregateFunction="NONE" groupBy="true" billable="true"/>
            </appinfo>
         </annotation>
      </attribute>
      <attribute name="bandwidthIn" use="required" type="p:bandwidthInType">
         <annotation>
            <documentation>
               <html:p>The amount of bandwidth in, in kilobytes.</html:p>
            </documentation>
            <appinfo>
               <usage:attributes aggregateFunction="SUM"
                                 unitOfMeasure="KB"
                                 groupBy="false"
                                 billable="true"/>
            </appinfo>
         </annotation>
      </attribute>
      <attribute name="bandwidthOut" use="required" type="p:bandwidthOutType">
         <annotation>
            <documentation>
               <html:p>The amount of bandwidth out, in kilobytes.</html:p>
            </documentation>
            <appinfo>
               <usage:attributes aggregateFunction="SUM"
                                 unitOfMeasure="KB"
                                 groupBy="false"
                                 billable="true"/>
            </appinfo>
         </annotation>
      </attribute>
      <assert vc:minVersion="1.1"
              test="if (xsd:boolean(@isRedHat)) then not(xsd:boolean(@isSELinux) or xsd:boolean(@isWindows) or xsd:boolean(@isMSSQL) or xsd:boolean(@isMSSQLWeb)) else true()"
              xerces:message="If slice isRedHat then it cannot be SELinux, Windows, MSSQL or MSSQLQWeb."
              saxon:message="If slice isRedHat then it cannot be SELinux, Windows, MSSQL or MSSQLQWeb.">
         <annotation>
            <documentation>
               <html:p>Assertion: If slice isRedHat then it cannot be SELinux, Windows, MSSQL or MSSQLQWeb.</html:p>
            </documentation>
         </annotation>
      </assert>
      <assert vc:minVersion="1.1"
              test="if (xsd:boolean(@isSELinux)) then not(xsd:boolean(@isRedHat) or xsd:boolean(@isWindows) or xsd:boolean(@isMSSQL) or xsd:boolean(@isMSSQLWeb)) else true()"
              xerces:message="If slice isSELinux then it cannot be RedHat, Windows, MSSQL or MSSQLQWeb."
              saxon:message="If slice isSELinux then it cannot be RedHat, Windows, MSSQL or MSSQLQWeb.">
         <annotation>
            <documentation>
               <html:p>Assertion: If slice isSELinux then it cannot be RedHat, Windows, MSSQL or MSSQLQWeb.</html:p>
            </documentation>
         </annotation>
      </assert>
      <assert vc:minVersion="1.1"
              test="if (xsd:boolean(@isWindows)) then not(xsd:boolean(@isRedHat) or xsd:boolean(@isSELinux)) else true()"
              xerces:message="If slice isWindows then it cannot be RedHat or SELinux."
              saxon:message="If slice isWindows then it cannot be RedHat or SELinux.">
         <annotation>
            <documentation>
               <html:p>Assertion: If slice isWindows then it cannot be RedHat or SELinux.</html:p>
            </documentation>
         </annotation>
      </assert>
      <assert vc:minVersion="1.1"
              test="if (xsd:boolean(@isMSSQL)) then xsd:boolean(@isWindows) and not(xsd:boolean(@isMSSQLWeb) or xsd:boolean(@isRedHat) or xsd:boolean(@isSELinux)) else true()"
              xerces:message="If slice isMSSQL then it has to be windows, and not RedHat, SELinux or MSSQLWeb."
              saxon:message="If slice isMSSQL then it has to be windows, and not RedHat, SELinux or MSSQLWeb.">
         <annotation>
            <documentation>
               <html:p>Assertion: If slice isMSSQL then it has to be windows, and not RedHat, SELinux or MSSQLWeb.</html:p>
            </documentation>
         </annotation>
      </assert>
      <assert vc:minVersion="1.1"
              test="if (xsd:boolean(@isMSSQLWeb)) then xsd:boolean(@isWindows) and not(xsd:boolean(@isMSSQL) or xsd:boolean(@isRedHat) or xsd:boolean(@isSELinux)) else true()"
              xerces:message="If slice isMSSQLWeb then it has to be windows, and not RedHat, SELinux or MSSQL."
              saxon:message="If slice isMSSQLWeb then it has to be windows, and not RedHat, SELinux or MSSQL.">
         <annotation>
            <documentation>
               <html:p>Assertion: If slice isMSSQLWeb then it has to be windows, and not RedHat, SELinux or MSSQL.</html:p>
            </documentation>
         </annotation>
      </assert>
   </complexType>
   <simpleType name="ResourceTypes">
      <annotation>
         <documentation>
            <html:p>Resource Types for this product.</html:p>
         </documentation>
      </annotation>
      <restriction base="xsd:token">
         <enumeration value="SLICE"/>
      </restriction>
   </simpleType>
   <simpleType name="flavorType">
      <restriction base="xsd:unsignedInt">
         <minInclusive value="0"/>
         <maxInclusive value="25"/>
      </restriction>
   </simpleType>
   <simpleType name="bandwidthInType">
      <restriction base="xsd:unsignedLong">
         <minInclusive value="0"/>
         <maxInclusive value="6480000000"/>
      </restriction>
   </simpleType>
   <simpleType name="bandwidthOutType">
      <restriction base="xsd:unsignedLong">
         <minInclusive value="0"/>
         <maxInclusive value="6480000000"/>
      </restriction>
   </simpleType>
</xsd:schema>
